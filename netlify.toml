# Netlify deployment configuration for Erotica Lifestyle website
# Optimized for adult wellness e-commerce with enhanced security and performance

[build]
  publish = "."
  command = "npm run build"
  functions = "netlify/functions"

[build.environment]
  NODE_VERSION = "18"
  NPM_VERSION = "9"
  NETLIFY_SKIP_EDGE_HANDLERS = "false"
  GENERATE_SOURCEMAP = "false"
  CI = "true"

# Development context
[context.deploy-preview]
  command = "npm run build:preview"

[context.branch-deploy]
  command = "npm run build:staging"

# Production optimization
[context.production]
  command = "npm run build:production"
  
[context.production.environment]
  NODE_ENV = "production"
  NETLIFY_ENVIRONMENT = "production"

# Security Headers
[[headers]]
  for = "/*"
  [headers.values]
    # Security headers for adult content compliance
    X-Frame-Options = "DENY"
    X-XSS-Protection = "1; mode=block"
    X-Content-Type-Options = "nosniff"
    Referrer-Policy = "strict-origin-when-cross-origin"
    Strict-Transport-Security = "max-age=31536000; includeSubDomains; preload"
    
    # Content Security Policy for adult content
    Content-Security-Policy = """default-src 'self' https:; 
                                 script-src 'self' 'unsafe-inline' https://fonts.googleapis.com https://cdn.jsdelivr.net https://www.googletagmanager.com; 
                                 style-src 'self' 'unsafe-inline' https://fonts.googleapis.com https://cdn.jsdelivr.net; 
                                 font-src 'self' https://fonts.gstatic.com https://cdn.jsdelivr.net; 
                                 img-src 'self' data: https: blob:; 
                                 connect-src 'self' https: wss:; 
                                 media-src 'self' https: blob:; 
                                 object-src 'none'; 
                                 base-uri 'self'; 
                                 form-action 'self' https:;"""
    
    # Privacy and permissions
    Permissions-Policy = "camera=(), microphone=(), geolocation=(), payment=(), usb=(), magnetometer=(), gyroscope=(), accelerometer=()"
    
    # Adult content headers
    X-Robots-Tag = "index, follow"
    X-Adult-Content = "true"
    Age-Verification = "required"
    
    # Performance headers
    Accept-CH = "DPR, Width, Viewport-Width, Sec-CH-UA, Sec-CH-UA-Mobile, Sec-CH-UA-Platform"
    Critical-CH = "DPR, Width"
    Vary = "Accept-Encoding, Accept"

# HTML files - no cache for dynamic content updates
[[headers]]
  for = "*.html"
  [headers.values]
    Cache-Control = "public, max-age=0, must-revalidate, s-maxage=3600"
    Pragma = "no-cache"
    Expires = "0"

# CSS files - long-term caching with versioning
[[headers]]
  for = "*.css"
  [headers.values]
    Cache-Control = "public, max-age=31536000, immutable"
    Content-Type = "text/css; charset=utf-8"

# JavaScript files - long-term caching
[[headers]]
  for = "*.js"
  [headers.values]
    Cache-Control = "public, max-age=31536000, immutable"
    Content-Type = "application/javascript; charset=utf-8"

# JSON data files - moderate caching
[[headers]]
  for = "*.json"
  [headers.values]
    Cache-Control = "public, max-age=86400, stale-while-revalidate=604800"
    Content-Type = "application/json; charset=utf-8"

# Image files - aggressive caching
[[headers]]
  for = "/images/*"
  [headers.values]
    Cache-Control = "public, max-age=31536000, immutable"

[[headers]]
  for = "*.{png,jpg,jpeg,gif,svg,webp,avif,ico}"
  [headers.values]
    Cache-Control = "public, max-age=31536000, immutable"

# Font files - long-term caching
[[headers]]
  for = "*.{woff,woff2,ttf,eot,otf}"
  [headers.values]
    Cache-Control = "public, max-age=31536000, immutable"
    Access-Control-Allow-Origin = "*"

# API endpoints (future expansion)
[[headers]]
  for = "/api/*"
  [headers.values]
    Cache-Control = "no-cache, no-store, must-revalidate"
    Access-Control-Allow-Origin = "https://logonotobscurity.netlify.app"
    Access-Control-Allow-Methods = "GET, POST, PUT, DELETE, OPTIONS"
    Access-Control-Allow-Headers = "Content-Type, Authorization, X-Requested-With"

# Admin protection
[[headers]]
  for = "/admin/*"
  [headers.values]
    X-Robots-Tag = "noindex, nofollow"
    Cache-Control = "no-cache, no-store, must-revalidate"

# Sensitive files protection
[[headers]]
  for = "/.env*"
  [headers.values]
    X-Robots-Tag = "noindex, nofollow"
    Cache-Control = "no-cache, no-store, must-revalidate"

# REDIRECTS AND REWRITES

# Block access to sensitive files
[[redirects]]
  from = "/.env*"
  to = "/404.html"
  status = 404

[[redirects]]
  from = "/.git/*"
  to = "/404.html"
  status = 404

[[redirects]]
  from = "/node_modules/*"
  to = "/404.html"
  status = 404

[[redirects]]
  from = "/*.log"
  to = "/404.html"
  status = 404

# Admin area protection
[[redirects]]
  from = "/admin/*"
  to = "/404.html"
  status = 404

# Age verification flow
[[redirects]]
  from = "/verify-age"
  to = "/index.html"
  status = 200

[[redirects]]
  from = "/age-gate"
  to = "/index.html"
  status = 200

# SEO-friendly redirects
[[redirects]]
  from = "/privacy-policy"
  to = "/pages/privacy.html"
  status = 301

[[redirects]]
  from = "/privacy"
  to = "/pages/privacy.html"
  status = 301

[[redirects]]
  from = "/terms-of-service"
  to = "/pages/terms.html"
  status = 301

[[redirects]]
  from = "/terms"
  to = "/pages/terms.html"
  status = 301

[[redirects]]
  from = "/cookies"
  to = "/pages/cookies.html"
  status = 301

# Product catalog redirects
[[redirects]]
  from = "/shop"
  to = "/pages/catalog.html"
  status = 301

[[redirects]]
  from = "/store"
  to = "/pages/catalog.html"
  status = 301

[[redirects]]
  from = "/products"
  to = "/pages/catalog.html"
  status = 301

[[redirects]]
  from = "/catalog"
  to = "/pages/catalog.html"
  status = 301

# Category redirects
[[redirects]]
  from = "/vibrators"
  to = "/pages/catalog.html?category=vibrators"
  status = 301

[[redirects]]
  from = "/couples"
  to = "/pages/catalog.html?category=couples"
  status = 301

[[redirects]]
  from = "/wellness"
  to = "/pages/catalog.html?category=wellness"
  status = 301

[[redirects]]
  from = "/accessories"
  to = "/pages/catalog.html?category=accessories"
  status = 301

# Blog redirects
[[redirects]]
  from = "/blog"
  to = "/pages/blog.html"
  status = 301

[[redirects]]
  from = "/articles"
  to = "/pages/blog.html"
  status = 301

# Account and user area redirects
[[redirects]]
  from = "/account"
  to = "/pages/account.html"
  status = 301

[[redirects]]
  from = "/profile"
  to = "/pages/account.html"
  status = 301

[[redirects]]
  from = "/login"
  to = "/pages/auth.html"
  status = 301

[[redirects]]
  from = "/register"
  to = "/pages/auth.html"
  status = 301

# Support and contact redirects
[[redirects]]
  from = "/contact"
  to = "/index.html#contact"
  status = 301

[[redirects]]
  from = "/support"
  to = "/pages/support.html"
  status = 301

[[redirects]]
  from = "/help"
  to = "/pages/support.html"
  status = 301

# Legacy URL redirects (common adult site patterns)
[[redirects]]
  from = "/adult-toys"
  to = "/pages/catalog.html"
  status = 301

[[redirects]]
  from = "/sex-toys"
  to = "/pages/catalog.html"
  status = 301

[[redirects]]
  from = "/intimate-products"
  to = "/pages/catalog.html"
  status = 301

# API redirects (for future implementation)
[[redirects]]
  from = "/api/products"
  to = "/data/products.json"
  status = 200

# 404 fallback for SPA-style routing
[[redirects]]
  from = "/*"
  to = "/index.html"
  status = 200
  conditions = {Role = ["user"], Country = ["!CN", "!RU"]}

# FORM PROCESSING
[forms]
  # Contact form
  [forms.contact]
    honeypot = true
    spam_filter = true
    
  # Newsletter signup
  [forms.newsletter]
    honeypot = true
    spam_filter = true
    
  # Ambassador application
  [forms.ambassador]
    honeypot = true
    spam_filter = true

# PLUGINS
[[plugins]]
  package = "@netlify/plugin-lighthouse"
  
  [plugins.inputs]
    output_path = "reports/lighthouse.html"
    
[[plugins]]
  package = "netlify-plugin-submit-sitemap"
  
  [plugins.inputs]
    baseUrl = "https://logonotobscurity.netlify.app"
    sitemapPath = "/sitemap.xml"
    providers = [
      "google",
      "bing"
    ]

[[plugins]]
  package = "@netlify/plugin-html-validate"
  
  [plugins.inputs]
    files = ["**/*.html"]

# FUNCTIONS (for future serverless features)
[functions]
  external_node_modules = ["sharp", "canvas"]
  node_bundler = "esbuild"
  
# EDGE FUNCTIONS
[[edge_functions]]
  function = "age-verification"
  path = "/*"
  
[[edge_functions]]
  function = "geolocation-check"
  path = "/verify-location"

# SPLIT TESTING (A/B testing for conversion optimization)
[[splits]]
  path = "/"
  branches = [
    { branch = "main", weight = 90 },
    { branch = "homepage-variant", weight = 10 }
  ]

# LARGE MEDIA (for future image optimization)
[large_media]
  track = ["*.jpg", "*.png", "*.gif", "*.webp"]
